#!/bin/bash

set -o nounset -o pipefail -o errexit

SCRIPT_DIR=$(readlink -f "$0" | xargs dirname)
PACKAGE_FINDER=${PACKAGE_FINDER-$SCRIPT_DIR/package}

RUNTIME=
BUILD=
CHECK=
MARKDOWN=
while getopts "rbcm-" OPT; do
    case $OPT in
        r) RUNTIME=1 ;;
        b) BUILD=1 ;;
        c) CHECK=1 ;;
        m) MARKDOWN=1 ;;
        -) break ;;
        ?) exit 2 ;;
    esac
done
shift $((OPTIND-1))

get_release() {
    grep "VERSION_CODENAME" /etc/os-release | sed 's/VERSION_CODENAME=//'
}

RELEASE=$(get_release)

if [ "$RELEASE" = "jammy" ]; then # 22.04
    LIBNODE_VER=72
    LUA_VER=5.4
    PYTHON_VER=3
elif [ "$RELEASE" = "noble" ]; then # 24.04
    LIBNODE_VER=109
    LUA_VER=5.4
    PYTHON_VER=3
else
    echo 1>&2 "unsupported release: $RELEASE"
    exit 1
fi

PKGS=()

if [ -n "$RUNTIME" ]; then
    PKGS+=(libcap2)
    PKGS+=("lua$LUA_VER")
    PKGS+=("python$PYTHON_VER")
    PKGS+=("libnode$LIBNODE_VER")
    PKGS+=("bash")
fi

if [ -n "$BUILD" ]; then
    PKGS+=(make pkg-config gcc libcap-dev)
    PKGS+=(wget ca-certificates bison flex)
    PKGS+=("liblua$LUA_VER-dev")
    PKGS+=("python$PYTHON_VER")
    PKGS+=("libpython$PYTHON_VER-dev")
    PKGS+=("libnode-dev")
fi

if [ -n "$CHECK" ]; then
    PKGS+=("python$PYTHON_VER-toml") # TODO until python >= 3.11
fi

if [ -z "$MARKDOWN" ]; then
    echo "${PKGS[@]}"
else
    I=0
    for p in "${PKGS[@]}"; do
        if [ $I -gt 0 ]; then
            echo -n " "
        fi
        URL=$($PACKAGE_FINDER "$RELEASE" "$p")
        echo -n "[\`$p\`]($URL)"
        I=$((I+1))
    done
    echo
fi
