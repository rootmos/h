#!/bin/bash

set -o nounset -o pipefail -o errexit

SCRIPT_DIR=$(readlink -f "$0" | xargs dirname)
TOOLS=${TOOLS-$SCRIPT_DIR/../tools}
ROOT=${ROOT-$(readlink -f "$SCRIPT_DIR/..")}
ARCH=${ARCH-}
DIST=${DIST-}
TARBALL=
FORCE=${FORCE-}
while getopts "a:fd:t:-" OPT; do
    case $OPT in
        a) ARCH=$OPTARG ;;
        f) FORCE=1 ;;
        d) DIST=$OPTARG ;;
        t) TARBALL=$OPTARG ;;
        -) break ;;
        ?) exit 2 ;;
    esac
done
shift $((OPTIND-1))

if [ -z "$ARCH" ]; then
    echo 1>&2 "arch not set"
    exit 1
fi

if [ -z "$DIST" ] && [ -z "$TARBALL" ]; then
    echo 1>&2 "neither dist nor tarball asked for"
    exit 1
fi

if [ -z "$DIST" ]; then
    DIST=$(mktemp -d)
    trap 'rm -rf $DIST' EXIT
elif [ -d "$DIST" ] && [ -z "$FORCE" ]; then
    echo 1>&2 "target exists: $DIST"
    exit 1
fi

mkdir -p "$DIST"

. <("$TOOLS/build-info" -e)

if [ "$ARCH" = "archlinux" ]; then
    SRC="$ROOT/build/archlinux/src/$BUILD_PROJECT-$BUILD_GIT_REF"
    cp -v "$ROOT/build/archlinux/PKGBUILD" "$DIST"
else
    SRC=$ROOT
fi

lang_ver() {
    "$SRC/h$1/h$1" -v | grep '^'"$1" | sed 's/\s//' | sed 's/\.[0-9]\+$//'
}

LUA_VERSION=$(lang_ver lua)
PYTHON_VERSION=$(lang_ver python)

SUFFIX="-$BUILD_VERSION-$ARCH"

cp -v "$SRC/hlua/hlua.c" "$DIST/hlua$SUFFIX-$LUA_VERSION.c"
cp -v "$SRC/hpython/hpython.c" "$DIST/hpython$SUFFIX-$PYTHON_VERSION.c"

if [ -n "$TARBALL" ]; then
    tar -cf "$TARBALL" -C "$DIST" .
fi
