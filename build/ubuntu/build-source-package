#!/bin/bash

set -o nounset -o pipefail -o errexit

WORKDIR=${WORKDIR-$PWD}
mkdir -p "$WORKDIR"

if [ -n "${1-}" ]; then
    if grep -cq 'source-package.*.zip' <<< "$1"; then
        SRC_PKG=$1
    elif [ -d "$1" ]; then
        ROOT=$1
    else
        echo 1>&2 "don't know how to build: $1"
    fi
fi

if [ -z "${ROOT-}" ]; then
    if [ -z "${SRC_PKG-}" ]; then
        ARCH=${ARCH-ubuntu*}
        PATTERN="source-package.*.$ARCH.zip"
        mapfile -t SRC_PKGS < <(find -type f -name "$PATTERN")
        if [ "${#SRC_PKGS[@]}" -eq 0 ]; then
            echo 1>&2 "no suitable packages found: $PATTERN"
            exit 1
        elif [ "${#SRC_PKGS[@]}" -gt 1 ]; then
            echo 1>&2 "ambiguous source packages found:"
            for pkg in "${SRC_PKGS[@]}"; do
                echo 1>&2 "  $pkg"
            done
            exit 1
        fi
        SRC_PKG=${SRC_PKGS[0]}
    fi

    unzip "$SRC_PKG" -d "$WORKDIR"

    mapfile -t BUILD_ENVS < <(find -type f -name ".build.env")
    if [ "${#BUILD_ENVS[@]}" -eq 0 ]; then
        mapfile -t ORIG < <(find -type f -name "*.orig.*")
        if [ "${#ORIG[@]}" -eq 0 ]; then
            echo 1>&2 "no suitable source bundle found"
            exit 1
        elif [ "${#ORIG[@]}" -gt 1 ]; then
            echo 1>&2 "ambiguous source bundles found:"
            for orig in "${ORIG[@]}"; do
                echo 1>&2 "  $orig"
            done
            exit 1
        fi

        tar -xf "${ORIG[0]}" -C "$WORKDIR"
    fi

    mapfile -t BUILD_ENVS < <(find -type f -name ".build.env")
    if [ "${#BUILD_ENVS[@]}" -eq 0 ]; then
        echo 1>&2 "unable to figure out package root"
        exit 1
    elif [ "${#BUILD_ENVS[@]}" -gt 1 ]; then
        echo 1>&2 "ambiguous package roots found:"
        for env in "${BUILD_ENVS[@]}"; do
            echo 1>&2 "  $(dirname "$env")"
        done
    fi

    ROOT=$(dirname "${BUILD_ENVS[0]}")
fi

if [ ! -d "$ROOT/debian" ]; then
    mapfile -t DEBIAN < <(find -type f -name "*.debian*")
    if [ "${#DEBIAN[@]}" -eq 0 ]; then
        echo 1>&2 "no suitable debian bundle found"
        exit 1
    elif [ "${#DEBIAN[@]}" -gt 1 ]; then
        echo 1>&2 "ambiguous debian bundles found:"
        for debian in "${DEBIAN[@]}"; do
            echo 1>&2 "  $debian"
        done
    fi

    tar -xf "${DEBIAN[0]}" -C "$ROOT"
fi

cd "$ROOT"
bash -x debian/missing-deps -i
dpkg-buildpackage
