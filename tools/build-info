#!/bin/bash

set -o nounset -o pipefail -o errexit

STYLE=env
OUTPUT=/dev/stdout
PREFIX=BUILD_
while getopts "ceo:p:-" OPT; do
    case $OPT in
        c) STYLE=c ;;
        e) STYLE=env ;;
        o) OUTPUT=$OPTARG ;;
        p) PREFIX=$OPTARG ;;
        -) break ;;
        ?) exit 2 ;;
    esac
done
shift $((OPTIND-1))

out() {
    cat >> "$OUTPUT"
}

kv() {
    if [ "$STYLE" = "env" ]; then
    out <<EOF
$PREFIX$1=$2
EOF
    elif [ "$STYLE" = "c" ]; then
    out <<EOF
#define $PREFIX$1 "$2"
EOF
    else
        echo 1>&2 "unknown style: $STYLE"
        exit 1
    fi
}

if [ -n "${CI-}" ]; then
    GIT_REF=$GITHUB_SHA
    GIT_DIRTY= # HACK: assumption
    kv "GITHUB_REPO" "$GITHUB_REPOSITORY"
    REPO_URL=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY
    SOURCE_TARBALL_URL=$REPO_URL/archive/$GIT_REF.zip
elif command -v git > /dev/null; then
    GIT_REF=$(git rev-parse HEAD)
    GIT_DIRTY=$([ -n "$(git status --porcelain)" ] && echo "1")

    ORIGIN=$(git remote get-url origin)
    if grep -cq "^git@github.com:" <<< "$ORIGIN"; then
        GITHUB_REPO=$(sed 's/^git@github.com:\(.*\).git$/\1/' <<< "$ORIGIN")
        kv "GITHUB_REPO" "$GITHUB_REPO"
        REPO_URL=https://github.com/$GITHUB_REPO
        SOURCE_TARBALL_URL=$REPO_URL/archive/$GIT_REF.zip
    else
        echo 1>&2 "unable to figure out repository url"
        exit 1
    fi
fi

kv "GIT_REF" "$GIT_REF"
kv "GIT_DIRTY" "$GIT_DIRTY"
kv "REPO_URL" "$REPO_URL"
kv "SOURCE_TARBALL_URL" "$SOURCE_TARBALL_URL"
