#!/bin/bash

set -o nounset -o pipefail -o errexit

SCRIPT_DIR=$(readlink -f "$0" | xargs dirname)
HOST_TOOLS=${TOOLS-$(readlink -f "$SCRIPT_DIR/../../tools")}

WORKDIR=$(mktemp -d)
trap 'sudo -A rm -rf $WORKDIR' EXIT

read SHA256 TARBALL < <("$HOST_TOOLS/archive" -O "$WORKDIR")

tar -xzf "$TARBALL" -C "$WORKDIR"

BUILD_ENV=$(find "$WORKDIR" -name ".build.env")
PACKAGE_ROOT=$(dirname "$BUILD_ENV")
TOOLS=${TOOLS-$PACKAGE_ROOT/tools}

. <("$TOOLS/build-info" -e)
PROJECT_NAME=$(tr '/' '-' <<< "$BUILD_GIT_REPO")

DEBIAN_SRC=$SCRIPT_DIR/debian
DEBIAN_DST=$PACKAGE_ROOT/debian
mkdir -p "$DEBIAN_DST"

FILES=(control changelog rules missing-deps)
VARS=(PROJECT_NAME BUILD_VERSION)
export "${VARS[@]}"

SH_VARS=""
for v in "${VARS[@]}"; do
    SH_VARS="$SH_VARS"'$'"$v"
done
for f in "${FILES[@]}"; do
    envsubst "${SH_VARS[@]}" < "$DEBIAN_SRC/$f" > "$DEBIAN_DST/$f"
    if [ -x "$DEBIAN_SRC/$f" ]; then
        chmod +x "$DEBIAN_DST/$f"
    fi
done

mkdir -p "$DEBIAN_DST/source"
echo "3.0 (quilt)" > "$DEBIAN_DST/source/format"

mv "$TARBALL" "$WORKDIR/${PROJECT_NAME}_$BUILD_VERSION.orig.tar.gz"

UNPRIVILEGED=ubuntu

cat <<EOF > "$WORKDIR/run"
#!/bin/sh

set -o nounset -o errexit

useradd -m $UNPRIVILEGED
chown -R $UNPRIVILEGED:$UNPRIVILEGED .

cd "$(basename "$PACKAGE_ROOT")"

#apt-get update
debian/missing-deps -i
debian/missing-deps -i

sudo -u $UNPRIVILEGED dpkg-buildpackage

cp -v ../*.deb /out
EOF
chmod +x "$WORKDIR/run"

dorker -v "$WORKDIR:/workdir" -v"$PWD/out:/out"
