#!/bin/bash

set -o nounset -o pipefail -o errexit

INCLUDE=()
INCLUDE+=("stddef.h")
INCLUDE+=("fcntl.h")
INCLUDE+=("signal.h")
INCLUDE+=("linux/unistd.h")
INCLUDE+=("linux/seccomp.h" "linux/audit.h")
INCLUDE+=("sys/mman.h" "sys/ioctl.h")

LONG=${PP_LONG-l}
FMT=%${LONG}d
NEWLINE='\n'
while getopts "nxud-" OPT; do
    case $OPT in
        n) NEWLINE= ;;
        x) FMT=0x%${LONG}x ;;
        u) FMT=%${LONG}u ;;
        d) FMT=%${LONG}d ;;
        -) break ;;
        ?) exit 2 ;;
    esac
done
shift $((OPTIND-1))

src() {
    for i in "${INCLUDE[@]}"; do
        echo "#include <$i>"
    done
    cat <<EOF
#include <stdio.h>
int main() { return printf("$FMT$NEWLINE", $1), 0; }
EOF
}

expression() {
    if command -v tcc > /dev/null; then
        src "$1" | tcc -run -
    else
        TMP=$(mktemp -d)
        trap 'rm -rf $TMP' EXIT

        src "$1" > "$TMP/a.c"
        cc -w -o "$TMP/a" "$TMP/a.c"
        "$TMP/a"
    fi
}

if [ "${1--}" == "-" ] || [ -f "$1" ]; then
    cat "${1--}" | python3 <(cat <<EOF
import re
import sys
import subprocess

def expr(m):
    p = subprocess.run(["$0", "-nx", m.group(1)], check=True, capture_output=True, text=True)
    return p.stdout

i = sys.stdin.read()
o = re.sub(r'\\$\\\$([^\\$]+)\\$\\$', expr, i)
o = re.sub(r'\\\$([a-zA-Z0-9_]+)', expr, o)
sys.stdout.write(o)
EOF
)
else
    expression "$1"
fi
