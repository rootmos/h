name: Build and test
on:
  push:
  schedule:
    - cron: "0 0 7 * *"
  workflow_dispatch:

jobs:
  ubuntu:
    continue-on-error: true
    strategy:
      matrix:
        host: [ "ubuntu-22.04", "ubuntu-24.04" ]
        container: [ "ubuntu:22.04", "ubuntu:24.04" ]
    runs-on: ${{ matrix.host }}
    container:
      image: ${{ matrix.container }}
    env:
      ARCH: ubuntu2204
      UNPRIVILEGED: ubuntu
      TEST_OUTPUT_DIR: /tmp/tests
      WORKDIR: /tmp/workdir
      TRACE: true
      TIMEOUT: 10
    steps:
    - name: Install minimal dependencies
      run: |
        apt-get update
        apt-get install -y --no-install-recommends git sudo gettext-base ca-certificates strace

    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create an unprivileged user
      if: ${{ matrix.container == 'ubuntu:22.04' }}
      run: useradd -m $UNPRIVILEGED

    - name: Allow the unprivileged user to sudo
      run: |
        echo "$UNPRIVILEGED ALL = NOPASSWD: $(which apt-get)" | tee -a /etc/sudoers

    - name: Change ownership of the repo
      run: chown -R $UNPRIVILEGED:$UNPRIVILEGED .

    - name: Build package
      run: sudo -u $UNPRIVILEGED --preserve-env=WORKDIR,TEST_OUTPUT_DIR,TIMEOUT,TRACE env SUDO=sudo build/ubuntu/mk

    - name: Archive source package
      uses: actions/upload-artifact@v4
      with:
        name: source-package.${{github.sha}}.${{github.job}}.${{matrix.host}}.${{matrix.container}}
        retention-days: 7
        path: build/ubuntu/out/*.tar

    - name: Install package
      run: apt-get install -y ./build/ubuntu/out/*.deb

    - name: Test system installation
      run: |
        export TOOLS=$(readlink -f "$WORKDIR"/*/tools)
        run() {
          sudo -u $UNPRIVILEGED --preserve-env=TEST_OUTPUT_DIR,TOOLS,TIMEOUT,TRACE \
            env SUT=$(which $1) SHOW_IDS=1 \
            tools/test-harness -c $1
        }
        run hlua
        run hpython
        run hnode
        run hsh

    - name: Archive test results
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: tests.${{github.sha}}.${{github.job}}.${{matrix.host}}.${{matrix.container}}
        retention-days: 7
        path: "${{env.TEST_OUTPUT_DIR}}/*-tests-*.tar.gz"

  archlinux:
    continue-on-error: true
    strategy:
      matrix:
        host: [ "ubuntu-22.04", "ubuntu-24.04" ]
    runs-on: ${{ matrix.host }}
    container:
      image: archlinux:latest
    env:
      ARCH: archlinux
      UNPRIVILEGED: arch
      TEST_OUTPUT_DIR: /tmp/tests
      TRACE: true
      TIMEOUT: 10
    steps:
    - name: Install minimal dependencies
      run: pacman -Suy --noconfirm base-devel wget git strace

    # workaround for upstream nodejs package does not include libnode.so
    # https://gitlab.archlinux.org/archlinux/packaging/packages/nodejs/-/issues/1
    - name: Install nodejs-shared
      env:
        GH_TOKEN: ${{github.token}}
      run: |
        pacman -S --noconfirm github-cli
        gh --repo rootmos/nodejs-shared release download --pattern "nodejs-shared*x86_64*"
        pacman --noconfirm -U nodejs-shared*x86_64*

    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create an unprivileged user
      run: |
        useradd -m $UNPRIVILEGED
        chown -R $UNPRIVILEGED:$UNPRIVILEGED .
        tee -a /etc/sudoers.d/$UNPRIVILEGED <<< "$UNPRIVILEGED ALL = NOPASSWD: $(which pacman)"

    - name: Create PKGBUILD
      run: sudo -u $UNPRIVILEGED build/archlinux/mk

    - name: Archive PKGBUILD
      uses: actions/upload-artifact@v4
      with:
        name: PKGBUILD.${{github.sha}}.${{matrix.host}}
        retention-days: 7
        path: "build/archlinux/PKGBUILD"

    - name: Build package
      run: sudo -u $UNPRIVILEGED --preserve-env=TEST_OUTPUT_DIR,TIMEOUT,TRACE makepkg -si --noconfirm
      working-directory: build/archlinux

    - name: Test system installation
      run: |
        export TOOLS=$(readlink -f build/archlinux/src/*/tools)
        run() {
          sudo -u $UNPRIVILEGED --preserve-env=TEST_OUTPUT_DIR,TOOLS,TIMEOUT,TRACE \
            env SUT=$(which $1) SHOW_IDS=1 \
            tools/test-harness -c $1
        }
        run hlua
        run hpython
        run hnode
        run hsh

    - name: Archive test results
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: tests.${{github.sha}}.${{github.job}}.${{matrix.host}}
        retention-days: 7
        path: "${{env.TEST_OUTPUT_DIR}}/*-tests-*.tar.gz"
