#!/bin/bash

set -o nounset -o pipefail -o errexit

SCRIPT_DIR=$(readlink -f "$0" | xargs dirname)
TOOLS=${TOOLS-$SCRIPT_DIR}
ROOT=${ROOT-$(readlink -f "$SCRIPT_DIR/..")}

. <("$TOOLS/build-info" -e)

OUTPUT_DIR=${OUTPUT_DIR-$PWD}
OUTPUT=${OUTPUT-}
while getopts "o:O:-" OPT; do
    case $OPT in
        o) OUTPUT=$OPTARG ;;
        O) OUTPUT_DIR=$OPTARG ;;
        -) break ;;
        ?) exit 2 ;;
    esac
done
shift $((OPTIND-1))

if [ -z "$OUTPUT" ]; then
    OUTPUT=$OUTPUT_DIR/$BUILD_PROJECT-$BUILD_VERSION.tar.gz
fi

TMP=$(mktemp -d)
trap 'rm -rf $TMP' EXIT

cat <<EOF > "$TMP/.build.env"
GIT_REPO="$BUILD_GIT_REPO"
GIT_REF="$BUILD_GIT_REF"
REPO_URL="$BUILD_REPO_URL"
GIT_DIRTY="$BUILD_GIT_DIRTY"
GIT_USER_NAME="$BUILD_GIT_USER_NAME"
GIT_USER_EMAIL="$BUILD_GIT_USER_EMAIL"
SOURCE_TARBALL_URL="$BUILD_SOURCE_TARBALL_URL"
EOF

(
    cd "$ROOT"
    git archive \
        --format=tar \
        --worktree-attributes \
        --prefix="$BUILD_PROJECT-$BUILD_VERSION/" \
        --add="$TMP/.build.env" \
        "${1-HEAD}"
) | gzip > "$OUTPUT"

sha256sum "$OUTPUT"
